// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
require('dotenv').config();

const express = require('express');
const https = require('https');
const fs = require('fs');
const nodemailer = require('nodemailer');
const cors = require('cors');
const multer = require('multer'); // –î–æ–±–∞–≤–ª—è–µ–º multer –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ multipart/form-data

const app = express();
const port = process.env.PORT || 3000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ multipart/form-data
const upload = multer();

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Webflow
app.use(cors({
  origin: '*',
  methods: ['GET', 'POST', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'x-requested-with', 'Authorization']
}));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å
const transporter = nodemailer.createTransport({
  host: 'smtp.yandex.ru',
  port: 465,
  secure: true,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
app.get('/', (req, res) => {
  res.send('–ü–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –∏–∑ Webflow —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–æ–ª—å–∫–æ multipart/form-data
app.post('/api/send-mail', upload.none(), async (req, res) => {
  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', req.headers);
  console.log('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ multer:', req.body);

  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã –Ω–∞–ø—Ä—è–º—É—é –∏–∑ req.body (multer —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª multipart/form-data)
    const name = req.body.name || req.body.Name || '';
    const email = req.body.email || req.body.Email || '';
    const message = req.body.message || req.body.Message || req.body.comment || req.body.Comment || '';

    console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', { name, email, message });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!name || !email || !message) {
      console.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return res.sendStatus(400); // –¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –±–µ–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
    }

    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –æ—Ç ${name} <${email}>`);

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_RECIPIENT,
      subject: `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${name}`,
      html: `
        <h3>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ üíº</h3>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong></p>
        <p>${message}</p>
      `,
      text: `
        –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞
        
        –ò–º—è: ${name}
        Email: ${email}
        –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}
      `
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    await transporter.sendMail(mailOptions);
    console.log('–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å 200 –±–µ–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
    res.sendStatus(200);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å 500 –±–µ–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
    res.sendStatus(500);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ CORS)
app.options('*', cors());

// –û–ø—Ü–∏–∏ –¥–ª—è HTTPS —Å–µ—Ä–≤–µ—Ä–∞ - –ø—É—Ç–∏ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É –∏ –∫–ª—é—á—É –∏–∑ .env —Ñ–∞–π–ª–∞
const httpsOptions = {
  key: fs.readFileSync(process.env.SSL_KEY_PATH),
  cert: fs.readFileSync(process.env.SSL_CERT_PATH)
};

// –°–æ–∑–¥–∞–Ω–∏–µ HTTPS —Å–µ—Ä–≤–µ—Ä–∞
https.createServer(httpsOptions, app).listen(port, () => {
  console.log(`HTTPS —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});